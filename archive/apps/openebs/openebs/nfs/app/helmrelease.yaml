---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: openebs-nfs
  namespace: openebs
spec:
  chart:
    spec:
      chart: nfs-provisioner
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: openebs-nfs
        namespace: flux-system
  install:
    createNamespace: true
  interval: 1m0s
  values:
    analytics:
      enabled: "false"
    serviceAccount:
      create: true
      annotations: {}
      name: &serviceAccountName openebs-nfs-provisioner
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
    serviceAccountName: *serviceAccountName
    rbac:
      create: true
      pspEnabled: false
    # podSecurityContext: {}
      # fsGroup: 2000
    fullnameOverride: &fullname openebs-nfs-provisioner

    nfsProvisioner:
      enabled: true
      name: provisioner
      nfsServerNamespace: openebs
      annotations: {}
      podLabels:
        name: *fullname
      image:
        # Make sure that registry name end with a '/'.
        # For example : quay.io/ is a correct value here and quay.io is incorrect
        registry: quay.io/
        repository: openebs/provisioner-nfs
        tag: &tag 0.10.0
        pullPolicy: IfNotPresent
      enableLeaderElection: "true"
      # If set to false, containers created by the nfs provisioner will run without extra privileges.
      privileged: true
      healthCheck:
        initialDelaySeconds: 30
        periodSeconds: 60
      # nodeSelector:
      # kubernetes.io/arch: amd64

      nfsServerAlpineImage:
        registry: quay.io/
        repository: openebs/nfs-server-alpine
        tag: *tag
      # nfsServerNodeAffinity defines the node affinity rules to place NFS Server
      # instance. It accepts affinity rules in multiple ways:
      # - If NFS Server needs to be placed on storage nodes as well as only in
      #   zone-1 & zone-2 then value can be: "kubernetes.io/zone:[zone-1,zone-2],kubernetes.io/storage-node".
      # - If NFS Server needs to be placed only on storage nodes & nfs nodes then
      #   value can be: "kubernetes.io/storage-node,kubernetes.io/nfs-node"
      nfsServerNodeAffinity: openebs.io/engine
      # nfsHookConfigMap represent the ConfigMap name to be used for hook configuration.
      # By default, nfsHookConfigMap is set to empty.
      # If nfsHookConfigMap is set then chart will mount the configmap using volume, named `hook-config`
      nfsHookConfigMap: ""

    nfsServer:
      useClusterIP: "false"

    nfsStorageClass:
      name: openebs-kernel-nfs
      reclaimPolicy: Delete
      nfsServerType: kernel
      isDefaultClass: false
      backendStorageClass: nvme-lvm
      # The customServerConfig key passes a custom /etc/exports configuration to
      # the NFS servers created using this StorageClass.
      # The configuration settings are not validated, and can lead to security
      # vulnerability.
      # USING THIS IS NOT RECOMMENDED
      customServerConfig: ""
      # leaseTime defines the renewal period(in seconds) for client state
      leaseTime:
      # graceTime defines the recovery period(in seconds) to reclaim locks
      # setting graceTime and leaseTime lower will reduce the io pause time during nfs server restart
      graceTime:
      # filePermissions defines the file ownership and mode specifications
      # for the NFS server's shared filesystem volume.
      # File permission changes are applied recursively if the root of the
      # volume's filesystem does not match the specified value.
      # For more information: https://github.com/openebs/dynamic-nfs-provisioner/blob/develop/docs/tutorial/file-permissions.md
      filePermissions: {}
      # The UID value is used to set the user-owner of NFS shared directory. Only valid
      # UIDs are accepted.
      # The ownership change is carried out recursively down the directory tree.
      #  UID: ""
      # The GID value is used to set the group-owner of NFS shared directory. Only valid
      # GIDs are accepted.
      # The ownership change is carried out recursively down the directory tree.
      #  GID: ""
      # The mode value is used to set the file mode of NFS shared directory. Both octals (e.g. 0744)
      # and incremental/decremental (e.g. "u+r", "o+rw") values are accepted.
      # The file mode change is carried out recursively down the directory tree.
      #  mode: ""

      # nfsServerResources defines the NFS server resource requests and limits
      # Usually, below request and limits are good enough for NFS Server to work
      # seamlessly(IOs will be taken care by kerner space process i.e nfsd).
      # nfsServerResources: {}
      #  requests:
      #    memory: 50Mi
      #    cpu: 50m
      #  limits:
      #    memory: 100Mi
      #    cpu: 100m
