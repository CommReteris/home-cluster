# https://hub.docker.com/_/nextcloud
# shamelessly stolen from https://github.com/brettinternet/homelab.git
#
# Alternative file hosting:
# - https://github.com/SergiX44/XBackBone
# - https://syncthing.net/
# - https://github.com/cshum/imagor
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nextcloud
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: nextcloud
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  dependsOn:
    - name: ingress-nginx
      namespace: networking
    - name: gpu-operator
      namespace: nvidia

  values:
    image:
      repository: nextcloud
      tag: 25.0.4-fpm
      pullPolicy: IfNotPresent

    runtimeClassName: nvidia

    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        external-dns.alpha.kubernetes.io/target: "ipv4.rengo.dev"
        external-dns.home.arpa/enabled: "true"
        cert-manager.io/cluster-issuer: letsencrypt-staging
        hajimari.io/enable: "true"
        hajimari.io/icon: cloud-outline
        nginx.ingress.kubernetes.io/proxy-body-size: 4G
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;

          rewrite ^/.well-known/webfinger /public.php?service=webfinger last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      hosts:
        - host: &host "nextcloud.rengo.dev"
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: nextcloud-tls
          hosts:
            - *host

    phpClientHttpsFix:
      enabled: true

    nextcloud:
      host: *host
      existingSecret:
        enabled: true
        secretName: nextcloud-secrets
        usernameKey: admin-username
        passwordKey: admin-password
      datadir: /data
      mail:
        enabled: false
      # Extra config files created in /var/www/html/config/
      # ref: https://docs.nextcloud.com/server/15/admin_manual/configuration_server/config_sample_php_parameters.html#multiple-config-php-file
      configs:
        proxy.config.php: |-
          <?php
          $CONFIG = array (
            'trusted_proxies' => array(
              0 => '127.0.0.1',
              1 => '10.0.0.0/8',
            ),
            'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
          );
      # For example, to use S3 as primary storage
      # ref: https://docs.nextcloud.com/server/13/admin_manual/configuration_files/primary_storage.html#simple-storage-service-s3
      #    s3.config.php: |-
      #      <?php
      #      $CONFIG = array (
      #        'objectstore' => array(
      #          'class' => '\\OC\\Files\\ObjectStore\\S3',
      #          'arguments' => array(
      #            'bucket'     => 'my-bucket',
      #            'autocreate' => true,
      #            'key'        => 'xxx',
      #            'secret'     => 'xxx',
      #            'region'     => 'us-east-1',
      #            'use_ssl'    => true
      #          )
      #        )
      #      );
      extraEnv:
        - name: TZ
          value: "America/New_York"
        - name: NEXTCLOUD_DATA_DIR
          value: "/data"

    nginx:
      ## You need to set an fpm version of the image for nextcloud if you want to use nginx!
      enabled: true
      image:
        repository: nginx
        tag: alpine
        pullPolicy: IfNotPresent
      config:
        # This generates the default nginx config as per the nextcloud documentation
        default: true
        # custom: |-
        #     worker_processes  1;..

    internalDatabase:
      enabled: false

    mariadb:
      enabled: true
      auth:
        database: nextcloud
        # password:
        # username:
      primary:
        persistence:
          enabled: true
          storageClass: ceph-filesystem
          readOnly: false
          # existingClaim: nextcloud-pvc
    redis:
      enabled: true
      auth:
        enabled: true
        # password:

    service:
      type: ClusterIP
      port: 8080
      targetPort: 80
      # externalTrafficPolicy: Local

    securityContext:
      runAsUser: "33"
      runAsGroup: "33"
      runAsNonRoot: false
      readOnlyRootFilesystem: true

    persistence:
      enabled: true
      storageClass: ceph-filesystem
      accessMode: ReadWriteOnce
      size: 100Gi
      # existingClaim: nextcloud-pvc
      ## Use an additional pvc for the data directory rather than a subpath of the default PVC
      ## Useful to store data on a different storageClass (e.g. on slower disks)
      # nextcloudData:
      #   enabled: true
      #   storageClass: ceph-filesystem
      #   readOnly: false
        # subPath:
        # existingClaim: nextcloud-data-pvc

    # Liveness and readiness probe values
    # Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
    #
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    startupProbe:
      enabled: false

      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 100m
        #   memory: 128Mi
        # requests:
        #   cpu: 100m
        #   memory: 128Mi
      ## Enable pod autoscaling using HorizontalPodAutoscaler
      ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
      # hpa:
      #   enabled: false
      #   cputhreshold: 60
      #   minPods: 1
      #   maxPods: 10
      metrics:
        enabled: true
        # The metrics exporter needs to know how you serve Nextcloud either http or https
        https: false
        # Use API token if set, otherwise fall back to password authentication
        # https://github.com/xperimental/nextcloud-exporter#token-authentication
        # Currently you still need to set the token manually in your nextcloud install
        token: ""
        timeout: 5s
        # if set to true, exporter skips certificate verification of Nextcloud server.
        tlsSkipVerify: true
        image:
          repository: xperimental/nextcloud-exporter
          tag: 0.6.0
          pullPolicy: IfNotPresent
        service:
          type: ClusterIP
          ## Use serviceLoadBalancerIP to request a specific static IP,
          ## otherwise leave blank
          # loadBalancerIP:
          annotations:
            prometheus.io/scrape: "true"
            prometheus.io/port: "9205"
          labels: {}
        serviceMonitor:
          ## @param metrics.serviceMonitor.enabled Create ServiceMonitor Resource for scraping metrics using PrometheusOperator
          enabled: true
          ## @param metrics.serviceMonitor.namespace Namespace in which Prometheus is running
          namespace: "monitoring"
      rbac:
        enabled: false
        serviceaccount:
          create: true
          name: nextcloud-serviceaccount
          annotations: {}
  valuesFrom:
    - kind: Secret
      name: nextcloud-secrets
      valuesKey: db-user
      targetPath: mariadb.auth.username
    - kind: Secret
      name: nextcloud-secrets
      valuesKey: db-password
      targetPath: mariadb.auth.password
    - kind: Secret
      name: nextcloud-secrets
      valuesKey: redis-password
      targetPath: redis.auth.password
