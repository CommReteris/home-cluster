---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 15m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.11.0
      sourceRef:
        kind: HelmRepository
        name: rook-ceph
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    ingress:
      dashboard:
        annotations:
          kubernetes.io/ingress.class: nginx
          external-dns.alpha.kubernetes.io/target: "ipv4.rengo.dev"
          external-dns.home.arpa/enabled: "true"
          cert-manager.io/cluster-issuer: letsencrypt-staging
          hajimari.io/enable: "true"
          hajimari.io/appName: "Rook"
          hajimari.io/icon: mdi:chess-rook
        host:
          name: &host rook.rengo.dev
          path: /
          # path: "/ceph-dashboard(/|$)(.*)"
        tls:
          - hosts:
              - *host
            secretName: rook-ceph-dashboard-tls
    toolbox:
      enabled: true
    monitoring:
      enabled: true
      createPrometheusRules: true
    configOverride: |
      [global]
      bdev_enable_discard = auto
      bdev_async_discard = auto
    cephClusterSpec:
      dataDirHostPath: /var/lib/rook
      continueUpgradeAfterChecksEvenIfNotHealthy: true
      network:
        # provider: host
      crashCollector:
        disable: true
      logCollector:
        enabled: false
      cleanupPolicy:
        # confirmation: "yes-really-destroy-data"
        sanitizeDisks:
          method: quick
          dataSource: zero
        allowUninstallWithVolumes: true
      modules:
        - name: rook
          enabled: true
        - name: pg_autoscaler
          enabled: true
        - name: nfs
          enabled: true
        - name: rgw
          enabled: true
        - name: mds_autoscaler
          enabled: true
        - name: prometheus
          enabled: true
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
      placement:
        mgr:
        #   tolerations:
        #     - effect: NoSchedule
        #       key: node-role.kubernetes.io/control-plane
        # mon:
        #   tolerations:
        #     - effect: NoSchedule
        #       key: node-role.kubernetes.io/control-plane
      # removeOSDsIfOutAndSafeToRemove: true
      priorityClassNames:
        mon: system-node-critical
        osd: system-node-critical
        mgr: system-cluster-critical
      # cluster level storage configuration
      storage:
        useAllNodes: false
        useAllDevices: false
        encryptedDevice: "false" # the default value for this option is "false"
        nodes:
          - name: droplet-0
            devices:
              - name: /dev/sdb # 1.8TB HDD
          - name: droplet-3
            devices:
              - name: /dev/sdb  # 1.9TB SSD
              - name: /dev/nvme0n1 # 1.6TB NVME
                config:
                  osdsPerDevice: "1"
          - name: droplet-4
            devices:
              - name: /dev/sdb # 1.9TB SSD
              - name: /dev/nvme0n1 # 1.6TB NVME
                config:
                  osdsPerDevice: "1"
          - name: droplet-5
            devices:
              - name: /dev/sdb # 1.9TB SSD
              - name: /dev/nvme0n1 #1.6TB NVME
                config:
                  osdsPerDevice: "1"
          - name: droplet-7
            devices:
              - name: /dev/sdb # 10.9 TB HDD

    cephBlockPoolsVolumeSnapshotClass:
      enabled: false
    # cephBlockPools:
    cephFileSystems:
      - name: ceph-ssd
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
              name: data0
              deviceClass: ssd
          metadataServer:
            activeCount: 1
            activeStandby: true
            resources:
              requests:
                cpu: 1000m
                memory: 4Gi
              limits:
                cpu: 2000m
                memory: 4Gi
            priorityClassName: system-cluster-critical
        storageClass:
          enabled: true
          isDefault: true
          name: ceph-ssd
          pool: data0
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
      - name: ceph-nvme
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
              name: data1
              deviceClass: nvme
          metadataServer:
            activeCount: 1
            activeStandby: true
            resources:
              requests:
                cpu: 1000m
                memory: 4Gi
              limits:
                cpu: 2000m
                memory: 4Gi
            priorityClassName: system-cluster-critical
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-nvme
          pool: data1
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephObjectStores:
      - name: ceph-objectstore
        spec:
          metadataPool:
            enableRBDStats: true
            failureDomain: host
            replicated:
              size: 3
            deviceClass: ssd
          dataPool:
            failureDomain: host
            replicated:
              size: 3
              hybridStorage:
                primaryDeviceClass: ssd
                secondaryDeviceClass: hdd
          preservePoolsOnDelete: true
          gateway:
            type: s3
            port: 80
            hostNetwork: false
            instances: 1
          healthCheck:
            bucket:
              interval: 60s
        storageClass:
          enabled: true
          name: ceph-bucket
          reclaimPolicy: Delete
          parameters:
            region: us-east-1
