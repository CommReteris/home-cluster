---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: cells
  namespace: hosted
spec:
  chart:
    spec:
      chart: cells
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: cells
        namespace: flux-system
  interval: 15m0s
  values:
    service:
      type: ClusterIP
      # port: 8080
      # discoveryPort: 8002
      # binds:
        # Set values here if you want to bind the port elsewhere
      # reverseproxyurl:
      # tlsconfig:
        # selfsigned:

    ingress:
      ## @param ingress.enabled Enable ingress controller resource for Cells
      ##
      enabled: false
      ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
      ##
      apiVersion: ""
      ## @param ingress.ingressClassName IngressClass that will be used to implement the Ingress (Kubernetes 1.18+)
      ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster.
      ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
      ##
      ingressClassName: ""
      ## @param ingress.hostname Default host for the ingress resource
      ##
      hostname: cells.local
      ## @param ingress.path The Path to Pydio Cells&reg;. You may need to set this to '/*' in order to use this with ALB ingress controllers.
      ##
      path: /
      ## @param ingress.pathType Ingress path type
      ##
      pathType: ImplementationSpecific
      ## @param ingress.servicePort Service port to be used
      ## Default is http. Alternative is https.
      ##
      servicePort: http
      ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
      ## For a full list of possible ingress annotations, please see
      ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
      ## Use this parameter to set the required annotations for cert-manager, see
      ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
      ##
      ## e.g:
      ## annotations:
      ##   kubernetes.io/ingress.class: nginx
      ##   cert-manager.io/cluster-issuer: cluster-issuer-name
      ##
      annotations: {
        "nginx.ingress.kubernetes.io/proxy-body-size": "0"
      }
      ## @param ingress.tls Enable TLS configuration for the hostname defined at `ingress.hostname` parameter
      ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
      ## You can:
      ##   - Use the `ingress.secrets` parameter to create this TLS secret
      ##   - Rely on cert-manager to create it by setting the corresponding annotations
      ##   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
      ##
      tls: false
      ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
      ##
      selfSigned: false
      ## @param ingress.extraHosts The list of additional hostnames to be covered with this ingress record.
      ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
      ## e.g:
      ## extraHosts:
      ##   - name: cells.local
      ##     path: /
      ##
      extraHosts: []
      ## @param ingress.extraPaths Any additional paths that may need to be added to the ingress under the main host
      ## For example: The ALB ingress controller requires a special rule for handling SSL redirection.
      ## extraPaths:
      ## - path: /*
      ##   backend:
      ##     serviceName: ssl-redirect
      ##     servicePort: use-annotation
      ##
      extraPaths: []
      ## @param ingress.extraTls The tls configuration for additional hostnames to be covered with this ingress record.
      ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
      ## e.g:
      ## extraTls:
      ## - hosts:
      ##     - cells.local
      ##   secretName: cells.local-tls
      ##
      extraTls: []
      ## @param ingress.secrets If you're providing your own certificates, please use this to add the certificates as secrets
      ## key and certificate are expected in PEM format
      ## name should line up with a secretName set further up
      ##
      ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
      ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
      ## It is also possible to create and manage the certificates outside of this helm chart
      ## Please see README.md for more information
      ##
      ## Example
      ## secrets:
      ##   - name: cells.local-tls
      ##     key: ""
      ##     certificate: ""
      ##
      secrets: []
      ## @param ingress.extraRules Additional rules to be covered with this ingress record
      ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
      ## e.g:
      ## extraRules:
      ## - host: example.local
      ##     http:
      ##       path: /
      ##       backend:
      ##         service:
      ##           name: example-svc
      ##           port:
      ##             name: http
      ##
      extraRules: []

    #------------------------------
    # Dependency settings
    #------------------------------
    mariadb:
      enabled: true
      volumePermissions:
        enabled: true

    redis:
      enabled: true
      volumePermissions:
        enabled: true
      auth:
        enabled: false

    nats:
      enabled: true
      auth:
        enabled: false
      volumePermissions:
        enabled: true

    etcd:
      enabled: true
      commonAnnotations: {
        "helm.sh/hook": "pre-install",
        "helm.sh/hook-weight": "-2"
      }
      auth:
        rbac:
          create: false
      volumePermissions:
        enabled: true

    minio:
      enabled: false
      defaultBuckets: "thumbnails pydiods1 personal versions cellsdata binaries"
      volumePermissions:
        enabled: true

    mongodb:
      enabled: true
      auth:
        enabled: false
      volumePermissions:
        enabled: true

    vault:
      enabled: true
      injector:
        annotations: {
          "helm.sh/hook": "pre-install",
          "helm.sh/hook-weight": "-3"
        }
        webhook:
          annotations: {
            "helm.sh/hook": "pre-install",
            "helm.sh/hook-weight": "-3"
          }
          failurePolicy: Fail
          namespaceSelector:
            matchExpressions:
              - key: kubernetes.io/metadata.name
                operator: NotIn
                values: ["vault", "kube-system", "kube-public", "kube-node-lease"]
      server:
        annotations: {
          "helm.sh/hook": "pre-install",
          "helm.sh/hook-weight": "-3"
        }
        dataStorage:
          mountPath: /tmp/vault/data
        extraVolumes:
          - type: configMap
            name: cells-vault
        postStart:
          - "/bin/sh"
          - "-c"
          - "sleep 5 && cp /vault/userconfig/cells-vault/bootstrap.sh /tmp/bootstrap.sh && chmod +x /tmp/bootstrap.sh && /tmp/bootstrap.sh"
      statefulset:
        annotations: {
          "helm.sh/hook": "pre-install",
          "helm.sh/hook-weight": "-3"
        }
